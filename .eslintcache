[{"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\index.js":"1","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\App.js":"2","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\Router.js":"3","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\routes\\Auth.js":"4","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\routes\\Home.js":"5","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\fbase.js":"6","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\Navigation.js":"7","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\routes\\Profile.js":"8","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\JSweet.js":"9","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\JSweetFactory.js":"10","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\AuthForm.js":"11"},{"size":206,"mtime":1612233197455,"results":"12","hashOfConfig":"13"},{"size":2197,"mtime":1613442437472,"results":"14","hashOfConfig":"13"},{"size":1929,"mtime":1613439972149,"results":"15","hashOfConfig":"13"},{"size":911,"mtime":1613539060486,"results":"16","hashOfConfig":"13"},{"size":1580,"mtime":1613538670567,"results":"17","hashOfConfig":"13"},{"size":854,"mtime":1613009135231,"results":"18","hashOfConfig":"13"},{"size":338,"mtime":1613354251676,"results":"19","hashOfConfig":"13"},{"size":1705,"mtime":1613440018131,"results":"20","hashOfConfig":"13"},{"size":2185,"mtime":1613186481242,"results":"21","hashOfConfig":"13"},{"size":2971,"mtime":1613538679614,"results":"22","hashOfConfig":"13"},{"size":2387,"mtime":1613539080674,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8dxe6f",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\index.js",[],["49","50"],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\App.js",[],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\Router.js",[],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\routes\\Auth.js",["51"],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\routes\\Home.js",["52"],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\fbase.js",[],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\Navigation.js",[],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\routes\\Profile.js",["53"],"import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  // useHistory() -> history 상수를 만들어 push 함\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    // authService.currentUser.uid -> userObj를 소스 공유 없이 할 경우 uid 가져오는 방법\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\n//     // query 문\r\n// const getMyJSweets = async () => {\r\n//   const jsweets = await dbService\r\n//     .collection(\"jsweets\")\r\n//     .where(\"creatorId\", \"==\", userObj.uid) // where() => 필터링 방법\r\n//     .orderBy(\"createdAt\") // orderBy() => 결과를 어떠한 순서에 따라 필터링\r\n//     .get();\r\n//   console.log(jsweets.docs.map((doc) => doc.data()));\r\n// };\r\n// useEffect(() => {\r\n//   getMyJSweets();\r\n// }, []);\r\n","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\JSweet.js",["54"],"import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\n// isOwner => 내가 주인이면 이 버튼 fragment 들을 볼 수 있음\r\nconst JSweet = ({ jsweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false); // editing(수정) 모드인지 아닌지 구분\r\n  const [newJSweet, setNewJSweet] = useState(jsweetObj.text); // input의 값(text) 수정 -> newJSweet을 수정하는 것\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this jsweet?\");\r\n    if (ok) {\r\n      // delete jsweet\r\n      // doc 경로는 firebase보면 됨 ( document -> collection -> jsweet의 아이디)\r\n      await dbService.doc(`jsweets/${jsweetObj.id}`).delete();\r\n      await storageService.refFromURL(jsweetObj.attachmentUrl).delete(); // url에서 reference 얻는 방법(refFromURL)\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`jsweets/${jsweetObj.id}`).update({\r\n      text: newJSweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewJSweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your jsweet\"\r\n              value={newJSweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update JSweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancle</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{jsweetObj.text}</h4>\r\n          {jsweetObj.attachmentUrl && (\r\n            <img src={jsweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete JSweet</button>\r\n              <button onClick={toggleEditing}>Edit JSweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JSweet;\r\n","C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\JSweetFactory.js",["55"],"C:\\Users\\이지석\\Desktop\\자기 개발\\Projects\\jswitter\\src\\components\\AuthForm.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":17,"nodeType":"62","messageId":"63","endLine":3,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":2,"column":21,"nodeType":"62","messageId":"63","endLine":2,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":5,"column":1,"nodeType":"67","endLine":44,"endColumn":3},{"ruleId":"68","severity":1,"message":"69","line":51,"column":13,"nodeType":"70","endLine":51,"endColumn":77},{"ruleId":"68","severity":1,"message":"69","line":72,"column":11,"nodeType":"70","endLine":72,"endColumn":62},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'storageService' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]